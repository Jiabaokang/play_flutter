plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def targetSdkVersion = 34
def minSdkVersion= 24

android {
    namespace = "com.jbk.play_flutter"
    compileSdk = targetSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }


    println("compileSdk:" + flutter.compileSdkVersion)
    println("ndkVersion:" + flutter.ndkVersion)
    println("minSdk:" + flutter.minSdkVersion)
    println("targetSdk:" + flutter.targetSdkVersion)
    println("use targetSdkVersion:" + targetSdkVersion)

    defaultConfig {
        applicationId = "com.jbk.play_flutter"
        targetSdk = targetSdkVersion
        minSdk = minSdkVersion

        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {

}
